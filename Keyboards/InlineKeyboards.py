from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def hello_msg():
    keyboard = InlineKeyboardMarkup(row_width=1)
    one = InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/english_words_b')
    keyboard.add(one)

    return keyboard


def fill_form_start():
    keyboard = InlineKeyboardMarkup(row_width=1)
    one = InlineKeyboardButton(text='–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='form')
    keyboard.add(one)
    text = '–í—ã –ø—Ä–∏–Ω—è—Ç—ã –≤ –∫–∞–Ω–∞–ª!\n–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ ' \
           '–æ–±—É—á–µ–Ω–∏—é'

    return text, keyboard


def choice_words_count():
    keyboard = InlineKeyboardMarkup(row_width=3)
    one = InlineKeyboardButton(text='3', callback_data='3')
    two = InlineKeyboardButton(text='4', callback_data='4')
    three = InlineKeyboardButton(text='5', callback_data='5')
    keyboard.add(one, two, three)
    text = '1. –°–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ –≤ –¥–µ–Ω—å –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑—É—á–∞—Ç—å?'

    return text, keyboard


def choice_level_english():
    keyboard = InlineKeyboardMarkup(row_width=3)
    one = InlineKeyboardButton(text='A1', callback_data='A1')
    two = InlineKeyboardButton(text='A2', callback_data='A2')
    three = InlineKeyboardButton(text='B1', callback_data='B1')
    four = InlineKeyboardButton(text='B2', callback_data='B2')
    five = InlineKeyboardButton(text='C', callback_data='C')
    keyboard.add(one, two, three, four, five)
    text = '2. –ö–∞–∫–æ–π —É –í–∞—Å —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞?'

    return text, keyboard


def choice_participate_rankings():
    keyboard = InlineKeyboardMarkup(row_width=2)
    one = InlineKeyboardButton(text='–î–∞', callback_data='yes_rates')
    two = InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no_rates')
    keyboard.add(one, two)
    text = '3. –ñ–µ–ª–∞–µ—Ç–µ –ª–∏ –í—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ —Ä–µ–π—Ç–∏–Ω–≥–∞?'

    return text, keyboard


def learn_words():
    keyboard = InlineKeyboardMarkup(row_width=1)
    one = InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='learn')
    keyboard.add(one)

    return keyboard


def learn_words_continue(text):
    keyboard = InlineKeyboardMarkup(row_width=1)
    one = InlineKeyboardButton(text=text, callback_data='learn_continue')
    keyboard.add(one)

    return keyboard


def check_learn_word(one_word, two_word, three_word, four_word):
    keyboard = InlineKeyboardMarkup(row_width=1)
    one = InlineKeyboardButton(text=one_word, callback_data=one_word)
    two = InlineKeyboardButton(text=two_word, callback_data=two_word)
    three = InlineKeyboardButton(text=three_word, callback_data=three_word)
    four = InlineKeyboardButton(text=four_word, callback_data=four_word)
    keyboard.add(one, two, three, four)

    return keyboard


# –î–∞–ª–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìù' –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def change_form():
    keyboard = InlineKeyboardMarkup(row_width=1)
    one = InlineKeyboardButton(text='–£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ üë®‚Äçüè´', callback_data='lvl_english_change')
    two = InlineKeyboardButton(text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É—á–∞–µ–º—ã—Ö —Å–ª–æ–≤ –≤ –¥–µ–Ω—å üî¢', callback_data='words_count_change')
    three = InlineKeyboardButton(text='–£—á–∞—Å—Ç–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ üìà', callback_data='table_rating_change')
    four = InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚òëÔ∏è', callback_data='change_form_close')
    keyboard.add(one, two, three, four)
    text = '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–º–µ–Ω–∏—Ç—å ‚ôªÔ∏è'

    return text, keyboard


def change_form_lvl_english():
    keyboard = InlineKeyboardMarkup(row_width=3)
    one = InlineKeyboardButton(text='A1', callback_data='A1_change')
    two = InlineKeyboardButton(text='A2', callback_data='A2_change')
    three = InlineKeyboardButton(text='B1', callback_data='B1_change')
    four = InlineKeyboardButton(text='B2', callback_data='B2_change')
    five = InlineKeyboardButton(text='C', callback_data='C_change')
    keyboard.add(one, two, three, four, five)
    text = '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —è–∑—ã–∫–æ–º üá¨üáß'

    return text, keyboard


def change_form_words_count_learn():
    keyboard = InlineKeyboardMarkup(row_width=3)
    one = InlineKeyboardButton(text='3', callback_data='3_change')
    two = InlineKeyboardButton(text='4', callback_data='4_change')
    three = InlineKeyboardButton(text='5', callback_data='5_change')
    keyboard.add(one, two, three)
    text = '–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –≤ –¥–µ–Ω—å üìñ'

    return text, keyboard


def change_form_table_rating():
    keyboard = InlineKeyboardMarkup(row_width=2)
    one = InlineKeyboardButton(text='–î–∞ ‚úîÔ∏è', callback_data='yes_rates_change')
    two = InlineKeyboardButton(text='–ù–µ—Ç ‚úñÔ∏è', callback_data='no_rates_change')
    keyboard.add(one, two)
    text = '–ñ–µ–ª–∞–µ—Ç–µ –ª–∏ –í—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ —Ä–µ–π—Ç–∏–Ω–≥–∞? üìà'

    return text, keyboard


# –î–∞–ª–µ–µ –≤—ã–≤–æ–¥ –¢–∞–±–ª–∏—Ü—ã —Ä–µ–π—Ç–∏–Ω–≥–∞
def table_rating_output(first_pg, second_pg, is_current_user, users):
    keyboard = InlineKeyboardMarkup(row_width=3)
    text = f'–¢–∞–±–ª–∏—Ü–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ üìä\n\n'
    num = 1
    if len(users) <= 10:
        for user in users:
            text += f'{num}. {user.user_name}: {user.score_table_rating} ' \
                    f'{"üë®‚Äçüíª" if is_current_user == user.user_name else ""}\n'
            num += 1
        return text, keyboard
    # –í—ã–≤–æ–¥, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ 10
    first = InlineKeyboardButton(text=f'{first_pg} ‚óÄÔ∏è', callback_data=f'{first_pg}_before_tablerating')
    close = InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å ‚èπ', callback_data=f'close_table_rating')
    second = InlineKeyboardButton(text=f'{second_pg} ‚ñ∂Ô∏è', callback_data=f'{second_pg}_after_tablerating')
    if second_pg - first_pg == 2:
        users_lst = users[(first_pg * 10) + 1:(first_pg * 10) + 11]
    else:
        users_lst = users[first_pg:(second_pg * 5) + 1]
    if users_lst:
        for user in users_lst:
            text += f'{num}. {user.user_name}: {user.score_table_rating} ' \
                    f'{"üë®‚Äçüíª" if is_current_user == user.user_name else ""}\n'
            num += 1
        if len(users_lst) < 10 and second_pg - first_pg == 2:
            keyboard.add(first, close)
        elif second_pg - first_pg == 2:
            keyboard.add(first, close, second)
        else:
            keyboard.add(close, second)

    return text, keyboard

